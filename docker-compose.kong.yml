version: '3.4'

networks: 
  kong-net:
    driver: bridge
  

volumes:
  kong-datastore:
  keycloak-datastore:

services:
  kong-db:
    image: postgres:11-alpine
    profiles: [ "database", "kong" ]
    volumes:
      - kong-datastore:/var/lib/postgresql/data
    networks:
      - kong-net
    ports:
      - "15432:5432"
    environment:
      POSTGRES_DB:       api-gw
      POSTGRES_USER:     kong
      POSTGRES_PASSWORD: kong

  kong-migrations:
    image: jonasbalan/kong.oidc.jfb:latest
    command: kong migrations bootstrap
    profiles: [ "database" ]
    depends_on:
      - kong-db
    environment:
      KONG_PG_HOST:          kong-db
      KONG_PG_PORT:          5432
      KONG_PG_DATABASE:      api-gw
      KONG_PG_USER:          kong
      KONG_PG_PASSWORD:      kong
    #secrets:
    #  - kong_postgres_password
    networks:
      - kong-net
    restart: on-failure

  kong-migrations-up:
    image: jonasbalan/kong.oidc.jfb:latest
    command: kong migrations up && kong migrations finish
    profiles: [ "database" ]
    depends_on:
      - kong-db
    environment:
      KONG_PG_HOST:          kong-db
      KONG_PG_PORT:          5432
      KONG_PG_DATABASE:      api-gw
      KONG_PG_USER:          kong
      KONG_PG_PASSWORD:      kong
    #secrets:
    #  - kong_postgres_password
    networks:
      - kong-net
    restart: on-failure 


  kong:
    build:
      context: ./
      dockerfile: Dockerfile.Kong
    image: kong-oidc:latest
    profiles: [ "kong" ]
    depends_on:
      - kong-db
    networks:
      - kong-net     
    ports:
      - "8000:8000" # Listener
      - "8001:8001" # Admin API
      - "8443:8443" # Listener  (SSL)
      - "8444:8444" # Admin API (SSL)
    environment:
      KONG_DATABASE:         postgres
      KONG_PG_HOST:          kong-db
      KONG_PG_PORT:          5432
      KONG_PG_DATABASE:      api-gw
      KONG_PG_USER:          kong
      KONG_PG_PASSWORD:      kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG:  /dev/stderr
      KONG_ADMIN_ERROR_LOG:  /dev/stderr
      KONG_PROXY_LISTEN:     0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN:     0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PLUGINS:          bundled,oidc
      KONG_LOG_LEVEL:        debug
    extra_hosts:
      - identity.sample-ms.server.com:10.0.0.2
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    read_only: true 

  konga:
    image: pantsel/konga:0.14.9
    profiles: [ "kong" ]
    depends_on:
      - kong-db
      - kong
    networks:
      - kong-net
    ports:
      - "1337:1337" # konga
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-db
      DB_PORT: '5432'
      DB_USER: kong
      DB_PASSWORD: kong
      DB_DATABASE: api-gw
      NODE_ENV: development
