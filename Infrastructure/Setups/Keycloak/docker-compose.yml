
# Copyright VMware, Inc.
# SPDX-License-Identifier: APACHE-2.0

version: '2'
services:
  postgresql:
    image: docker.io/bitnami/postgresql:11
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_USERNAME=bn_keycloak
      - POSTGRESQL_DATABASE=bitnami_keycloak
    networks:
      - keycloak-net  
    volumes:
      - 'postgresql_data:/bitnami/postgresql'       

  keycloak:
    image: docker.io/bitnami/keycloak:22
    environment:
      - KEYCLOAK_ENABLE_STATISTICS=true
      #- KEYCLOAK_EXTRA_ARGS=" -Dkeycloak.import=/opt/jboss/keycloak/imports/postman-realm-export.json"
      - KEYCLOAK_EXTRA_ARGS=" --import-realm"
      #- KEYCLOAK_IMPORT=/opt/jboss/keycloak/imports/postman-realm-export.json
      - KEYCLOAK_LOGLEVEL=DEBUG
    volumes:
      #- ./Keycloak:/opt/jboss/keycloak/imports:ro
      - ./config:/opt/bitnami/keycloak/data/import:ro
    depends_on:
      - postgresql
    #ports:
    #  - "8080"
    networks:
      - keycloak-net
volumes:
  postgresql_data:
    driver: local

networks:
    keycloak-net:
      name: internal.sample.ms.net
      external: true    


















#version: "3.9"
#services:
#  postgres:
#    container_name: db
#    image: "postgres:14.4"
#    healthcheck:
#      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
#      timeout: 45s
#      interval: 10s
#      retries: 10
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#      #- ./sql:/docker-entrypoint-initdb.d/:ro # turn it on, if you need run init DB
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_DB: keycloak
#      POSTGRES_HOST: postgres

#    ports:
#      - "5432:5432"

#  pgadmin:
#    container_name: pgadmin
#    image: "dpage/pgadmin4:5.1"
#    environment:
#      PGADMIN_DEFAULT_EMAIL: postgres@domain.local
#      PGADMIN_DEFAULT_PASSWORD: postgres
#    ports:
#      - "5050:80"


#  keycloak:
#    container_name: keycloak
#    build:
#      context: .
#      args:
#        KEYCLOAK_VERSION: 22.0.0
#    command: ['start', '--optimized']
#    depends_on:
#      - "postgres"
#    environment:
#      JAVA_OPTS_APPEND: -Dkeycloak.profile.feature.upload_scripts=enabled
#      KC_DB_PASSWORD: postgres
#      KC_DB_URL: jdbc:postgresql://postgres/keycloak
#      KC_DB_USERNAME: postgres
#      KC_HEALTH_ENABLED: 'true'
#      KC_HTTP_ENABLED: 'true'
#      KC_METRICS_ENABLED: 'true'
#      # KC_HOSTNAME: keycloak.com.au
#      # KC_HOSTNAME_PORT: 8180
#      KC_HOSTNAME_URL: http://identity.sample-ms.server.com:8180
#      KC_PROXY: reencrypt
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: password
#    ports:
#      - "8180:8080"
#      - "8787:8787" # debug port
   



#volumes:
#  postgres_data:



#version: '3.4'

#services:

#   keycloak:    
#      image: jboss/keycloak  
#      container_name: keycloak
#      ports:
#         - 7789:8080
#         - 9990:9990
#      environment:
#         - KEYCLOAK_USER=admin
#         - KEYCLOAK_PASSWORD=admin
#         - PROXY_ADDRESS_FORWARDING=true
#      command:
#         - start-dev
#         - --proxy=edge
#         - --hostname-strict=false
#         - --hostname-strict-https=false

#version: '3.9'

#services:
#  postgres:
#    image: postgres:13.2
#    restart: unless-stopped
#    environment:
#      POSTGRES_DB: ${POSTGRESQL_DB}
#      POSTGRES_USER: ${POSTGRESQL_USER}
#      POSTGRES_PASSWORD: ${POSTGRESQL_PASS}


#  keycloak:
#    depends_on:
#      - postgres
#    container_name: local_keycloak
#    environment:
#      DB_VENDOR: postgres
#      DB_ADDR: postgres
#      DB_DATABASE: ${POSTGRESQL_DB}
#      DB_USER: ${POSTGRESQL_USER}
#      DB_PASSWORD: ${POSTGRESQL_PASS}
#      PROXY_ADDRESS_FORWARDING: true
#    image: jboss/keycloak:${KEYCLOAK_VERSION}
#    ports:
#      - "28080:8080"
#    restart: unless-stopped

        